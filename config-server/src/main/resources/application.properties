spring.application.name=config-server
server.port=7001

spring.cloud.config.server.git.uri=https://gitee.com/putty_li/putty-config

#仓库相对搜索路径
spring.cloud.config.server.git.search-paths={application}
#spring.cloud.config.server.git.search-paths=user-manage

spring.cloud.config.server.git.username=putty
spring.cloud.config.server.git.password=my2018llc19940218

#交个eureka管理，通过服务发现获取配置，启动多个同application不同端口的config server实现高可用
eureka.client.service-url.defaultZone = http://localhost:1001/eureka/

#访问配置信息的URL与配置文件的映射关系：
#/{application}/{profile}[/{label}],for example:http://localhost:7001/putty/prod/config-label-test
#/{application}-{profile}.yml
#/{application}-{profile}.properties
#/{label}/{application}-{profile}.yml
#/{label}/{application}-{profile}.properties


#本地配置
#spring.cloud.config.server.git.basedir=gittemp

#健康监测：交给spring cloud config 监测是否可用
#spring.cloud.config.server.health.repositories.check.name=putty
#spring.cloud.config.server.health.repositories.check.label=master
#spring.cloud.config.server.health.repositories.check.profiles=default


#属性覆盖：就是全局配置
#spring.cloud.config.server.overrides.author=putty li
#spring.cloud.config.server.overrides.sex=man

#安全保护，spring security
#加密解密：对数据库等敏感配置加密



